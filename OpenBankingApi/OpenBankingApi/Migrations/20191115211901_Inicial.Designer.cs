// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenBankingApi.Infrastructure;

namespace OpenBankingApi.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20191115211901_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OpenBankingApi.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteTipoId");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<bool>("IsAtivo");

                    b.Property<long>("Registro");

                    b.HasKey("Id");

                    b.HasIndex("ClienteTipoId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("OpenBankingApi.Domain.Models.ClienteTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<bool>("IsAtivo");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("ClienteTipo");
                });

            modelBuilder.Entity("OpenBankingApi.Domain.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<long>("Cep");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<string>("Estado");

                    b.Property<bool>("IsAtivo");

                    b.Property<int>("Numero");

                    b.Property<string>("Pais");

                    b.Property<int>("PessoaId");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("OpenBankingApi.Domain.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<long>("Cpf");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<bool>("IsAtivo");

                    b.Property<string>("Nome");

                    b.Property<long>("Rg");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("OpenBankingApi.Domain.Models.Cliente", b =>
                {
                    b.HasOne("OpenBankingApi.Domain.Models.ClienteTipo", "ClienteTipo")
                        .WithMany()
                        .HasForeignKey("ClienteTipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OpenBankingApi.Domain.Models.Endereco", b =>
                {
                    b.HasOne("OpenBankingApi.Domain.Models.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("OpenBankingApi.Domain.Models.Endereco", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OpenBankingApi.Domain.Models.Pessoa", b =>
                {
                    b.HasOne("OpenBankingApi.Domain.Models.Cliente", "Cliente")
                        .WithOne("Pessoa")
                        .HasForeignKey("OpenBankingApi.Domain.Models.Pessoa", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
